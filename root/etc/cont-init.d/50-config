#!/command/with-contenv bash

USER_NAME=${USER_NAME:-ivonet.nl}
echo "User name is set to $USER_NAME"

# create folders
mkdir -p /home/$USER_NAME/{.ssh,bin}

# set password for abc to unlock it and set sudo access
sed -i "/${USER_NAME} ALL.*/d" /etc/sudoers
if [ "$SUDO_ACCESS" == "true" ]; then
  if [ -n "$USER_PASSWORD" ]; then
    echo "${USER_NAME} ALL=(ALL) ALL" >>/etc/sudoers
    echo "Sudo is enabled with password."
  else
    echo "${USER_NAME} ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers
    echo "Sudo is enabled without password."
  fi
else
  echo "Sudo is disabled."
fi

# Generate password if needed and set the password
USER_PASSWORD=${USER_PASSWORD:-$(
  tr </dev/urandom -dc _A-Z-a-z-0-9 | head -c${1:-8}
  echo
)}
echo "${USER_NAME}:${USER_PASSWORD}" | chpasswd

# Generating new host keys
if [ ! -L /etc/ssh ]; then
  sed -i "s/#PidFile/PidFile/" /etc/ssh/sshd_config
  ssh-keygen -A
fi

# password access
sed -i '/^#PasswordAuthentication/c\PasswordAuthentication yes' /etc/ssh/sshd_config
sed -i '/^PasswordAuthentication/c\PasswordAuthentication yes' /etc/ssh/sshd_config
chown root:"${USER_NAME}" /etc/shadow

# set umask for sftp
UMASK=${UMASK:-022}
sed -i "s|/usr/lib/ssh/sftp-server$|/usr/lib/ssh/sftp-server -u ${UMASK}|g" /etc/ssh/sshd_config

# set key auth in file
if [ ! -f /home/$USER_NAME/.ssh/authorized_keys ]; then
  touch /home/$USER_NAME/.ssh/authorized_keys
fi

# permissions
chown -R "${USER_NAME}":"${USER_NAME}" /home/$USER_NAME
chmod go-w /home/$USER_NAME
chmod 700 /home/$USER_NAME/.ssh
chmod 600 /home/$USER_NAME/.ssh/authorized_keys


#hushlogin
touch /home/$USER_NAME/.hushlogin